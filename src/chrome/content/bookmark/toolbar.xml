<?xml version="1.0"?>

 <!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Firefox Toolbar Thinger.
   -
   - The Initial Developer of the Original Code is
   -     Dave Townsend <dave.townsend@blueprintit.co.uk>.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK *****
   -
   - $HeadURL$
   - $LastChangedBy$
   - $Date$
   - $Revision$
   -->

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="toolbar" extends="chrome://thinger/content/bindings/thing.xml#thing">
    <content>
      <xul:hbox class="thinger-placesbar" flex="1" context="placesContext">
        <children/>
      </xul:hbox>
    </content>

    <implementation>
      <property name="_bookmarkBar" onget="return document.getAnonymousNodes(this)[0]"/>
      <property name="_barLabel" onget="return document.getAnonymousNodes(this._bookmarkBar)[0].childNodes[1].childNodes[2]"/>
      
      <method name="_init">
        <body>
          this._bookmarkBar._places = Components.classes["@mozilla.org/browser/nav-history-service;1"]
                                                 .getService(Components.interfaces.nsINavHistoryService);
          this._bookmarkBar._bms = Components.classes["@mozilla.org/browser/nav-bookmarks-service;1"]
                                             .getService(Components.interfaces.nsINavBookmarksService);
          
          this._bookmarkBar._bms.addObserver(this._bookmarkBar._observer, false);
          var t = this._bookmarkBar;
          window.addEventListener("resize",
                                  function f(e) { t.updateChevron(e); },
                                  false);
  
          var query = this._bookmarkBar._places.getNewQuery();
          query.setFolders([this._getAttribute("root", this._bookmarkBar._bms.toolbarRoot)], 1);
          var options = this._bookmarkBar._places.getNewQueryOptions();
          options.setGroupingMode([Components.interfaces.nsINavHistoryQueryOptions.GROUP_BY_FOLDER], 1);
          options.expandQueries = true;
          this._bookmarkBar._result = this._bookmarkBar._places.executeQuery(query, options);
          this._bookmarkBar._result.root.containerOpen = true;
          this._bookmarkBar._rebuild();

          this._settings.setAttribute("label", this._bookmarkBar._result.root.title+" Items");
          this._barLabel.setAttribute("label", this._bookmarkBar._result.root.title+" Items");
          if (this._bookmarkBar._result.root.icon)
            this._settings.setAttribute("image", this._bookmarkBar._result.root.icon.spec);
          else
            this._settings.removeAttribute("image");
        </body>
      </method>

      <method name="_destroy">
        <body>
          try
          {
            this._bookmarkBar._bms.removeObserver(this._bookmarkBar._observer);
          }
          catch (e)
          {
          }
        </body>
      </method>

      <method name="customise">
        <body>
          this._configure("chrome://thinger/content/bookmark/options.xul");
        </body>
      </method>
      
    </implementation>
  </binding>

</bindings>
